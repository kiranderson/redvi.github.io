(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{217:function(t,s,a){"use strict";a.r(s);var n=a(3),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("Сниппетом называют небольшой блок, фрагмент кода, предназначенный для повторного\nиспользования. Современные текстовые редакторы зачастую содержат сниппеты для\nразных задач и языков программирования.")]),t._v(" "),a("p",[t._v("Например, в LaTeX это такие конструкции как")]),t._v(" "),a("div",{staticClass:"language-latex extra-class"},[a("pre",{pre:!0,attrs:{class:"language-latex"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\begin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("document")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\end")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("document")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("С подобными кусочками кода в emacs тоже не бывает проблем. Однако, что если вам\nне хочется при создании нового документа заполнять его\nстандартным содержимым? Не весть как интересно наполнять стартовые файлы LaTeX\nили HTML, не правда ли?")]),t._v(" "),a("p",[t._v("Для такого случая можно заранее подготовить необходимые файлы-сниппеты, а при создании\nнового документа просто вставлять их содержимое в буфер текстового редактора. И\nздесь не обойтись без написания какой-нибудь полезной функции на emacs lisp.")]),t._v(" "),a("p",[t._v("Рассмотрим несколько несложных примеров.")]),t._v(" "),a("h2",{attrs:{id:"вставка-текста-прямо-из-функции"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#вставка-текста-прямо-из-функции","aria-hidden":"true"}},[t._v("#")]),t._v(" Вставка текста прямо из функции")]),t._v(" "),a("p",[t._v("В случае постоянного использования одного и того же языка программирования\nзаготовочные файлы иметь вовсе не обязательно: можно получить нужную\nпоследовательность символов непосредственно из функции.")]),t._v(" "),a("p",[t._v("Для этой нехитрой задачи воспользуемся командой вставки текста "),a("code",[t._v("insert")]),t._v(". В\nдвойных кавычках укажем нужный фрагмент кода.\nНапример:")]),t._v(" "),a("div",{staticClass:"language-lisp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-lisp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token defun"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("defun")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("newpy")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token arguments"}}),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; определить функцию newpy")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Create new python document"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; комментарий")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token interactive keyword"}},[t._v("interactive")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; работать интерактивно")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; вставить строки")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token car"}},[t._v("insert")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#!/usr/bin/env python\n # -*'),a("span",{pre:!0,attrs:{class:"token argument"}},[t._v("-")]),t._v(' coding: utf-8 -*-"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("Теперь при нажатии "),a("code",[t._v("M-x")]),t._v(" (после рестарта emacs) можно смело вводить имя только\nчто созданной функции и наблюдать, как указанный текст будет вставлен в текущем\nбуфере на той строке, где стоит курсор.")]),t._v(" "),a("p",[t._v("Если читатель относит себя к любителям горячих сочетаний клавиш, он может также\nопределить заветную комбинацию для быстрого вызова функции:")]),t._v(" "),a("div",{staticClass:"language-lisp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-lisp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token car"}},[t._v("global-set-key")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token car"}},[t._v("kbd")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"C-c s"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token quoted-symbol variable symbol"}},[t._v("'newpy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"поnучение-текста-из-файnа"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#поnучение-текста-из-файnа","aria-hidden":"true"}},[t._v("#")]),t._v(" Получение текста из файла")]),t._v(" "),a("p",[t._v("Обратимся к иному методу получения данных: вставке из определённого\nфайла.")]),t._v(" "),a("p",[t._v("Создадим функцию "),a("code",[t._v("newtex")]),t._v(", которая будет забирать данные из указанного файла при\nпомощи "),a("code",[t._v("insert-file-contents")]),t._v(". При необходимости строки будут разделены.")]),t._v(" "),a("div",{staticClass:"language-lisp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-lisp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token car"}},[t._v("defun")]),t._v(" newtex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Get data from the file ex.tex"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token interactive keyword"}},[t._v("interactive")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; вставить данные из файла ex.tex")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token car"}},[t._v("insert-file-contents")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"~/ex.tex"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; разделить строки")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token car"}},[t._v("split-string")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token car"}},[t._v("buffer-string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\n"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("t")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("Разделять строки совершенно необязательно: ведь заранее заготовленный сниппет уже\nприведён к соответствующему виду. Определить комбинацию клавиш можно так же, как\nэто уже было показано ранее.")]),t._v(" "),a("p",[t._v("Теперь предлагается немного усовершенствовать функцию, дабы иметь возможность вставлять\nсодержимое из разных файлов в зависимости от переданного функции аргумента.")]),t._v(" "),a("p",[t._v("В следующем примере даётся функция "),a("code",[t._v("snip")]),t._v(", которая принимает аргумент\n"),a("code",[t._v("ext")]),t._v(". Она взаимодействует с пользователем, получает от него имя расширения\nфайла (аргумент) и открывает соответствующий ему файл. Для выбора файла\nиспользуется конструкция "),a("code",[t._v("if")]),t._v(".")]),t._v(" "),a("div",{staticClass:"language-lisp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-lisp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token defun"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("defun")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("snip")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token arguments"}},[a("span",{pre:!0,attrs:{class:"token argument variable"}},[t._v("ext")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; ожидает аргумента ext")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Get data from the file."')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token interactive keyword"}},[t._v("interactive")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sExtension: "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; приглашение для ввода строки")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token car"}},[t._v("equal")]),t._v(" ext "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"html"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; проверить на равенство")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token car"}},[t._v("insert-file-contents")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"~/ex.tex"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token car"}},[t._v("equal")]),t._v(" ext "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"py"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token car"}},[t._v("insert-file-contents")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"~/ex.py"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; если аргумента нет")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("message")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"argument is nil"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("Так, в несколько строчек кода вместилась весьма полезная функция, способная\nсделать работу с emacs ещё чуточку продуктивнее. Можно ли использовать для сегодняшней\nцели сторонние «фичи» emacs автору неведомо. Но нужны ли они, если и\nтак всё просто?")])])},[],!1,null,null,null);s.default=e.exports}}]);