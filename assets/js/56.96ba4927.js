(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{185:function(t,a,s){"use strict";s.r(a);var e=s(3),n=Object(e.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("В данной статье читателю предлагается окунуться в бескрайнее море возможностей,\nчто предоставляют unix-like системы. Здесь собраны воедино многие понятия и\nкоманды, которые полезно было бы знать для повседневной работы с командной\nстрокой. Разумеется, автор отдаёт себе отчёт в том, что охватить всё в одной\nзаметке невозможно. Тем не менее, было принято решение объединить в ней наиболее\nупотребительные термины и решение некоторых распространённых задач. Сделано это\nпо соображениям удобства поиска, дабы материал не приходилось\nискать на разных страницах.")]),t._v(" "),s("p",[t._v("Приведёные ниже команды можно вводить как раздельно, так и в одну\nстроку. Во втором случае следует разделять команды знаком "),s("code",[t._v(";")]),t._v(". Каждый из\nразделов только коротко описывает назначение и употребление команд. Для\nполучения более подробной информации по каждой из них предлагается\nобратиться к справочным руководствам.")]),t._v(" "),s("h2",{attrs:{id:"содержание"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#содержание","aria-hidden":"true"}},[t._v("#")]),t._v(" Содержание")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#base"}},[t._v("Базовые команды")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#search"}},[t._v("Поиск по шаблону")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#sort"}},[t._v("Сортировка и замена строк")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#compare"}},[t._v("Сравнение файлов")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#metasymbols"}},[t._v("Метасимволы")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#pipeline"}},[t._v("Конвейеры")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#daemons"}},[t._v("Процессы")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#environment"}},[t._v("Настройка окружения")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#rwx"}},[t._v("Права доступа и файлы")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#beep-disable"}},[t._v("Отключение системного звукового сигнала")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#archive"}},[t._v("Работа с архивами")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#full-backup"}},[t._v("Полный backup и восстановление")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#incremental-backup"}},[t._v("Инкременальный backup")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#download"}},[t._v("Скачивание файлов/сайтов по сети")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#usb"}},[t._v("Создание загрузочного usb-flash")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#who"}},[t._v("Кто в системе")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#date-and-time"}},[t._v("Установка даты и времени")])])]),t._v(" "),s("h2",{attrs:{id:"базовые-команды"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#базовые-команды","aria-hidden":"true"}},[t._v("#")]),t._v(" "),s("a",{attrs:{id:"base"}}),t._v(" Базовые команды")]),t._v(" "),s("p",[t._v("Список команд для ежедневного использования.")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("команда")]),t._v(" "),s("th",[t._v("описание")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("mv file1 file2")]),t._v(" "),s("td",[t._v("переместить/переименовать файл")])]),t._v(" "),s("tr",[s("td",[t._v("rm file1")]),t._v(" "),s("td",[t._v("удалить файл")])]),t._v(" "),s("tr",[s("td",[t._v("rm -rf dir")]),t._v(" "),s("td",[t._v("удалить директорию")])]),t._v(" "),s("tr",[s("td",[t._v("rm -rf dir/*")]),t._v(" "),s("td",[t._v("удалить содержимое директории")])]),t._v(" "),s("tr",[s("td",[t._v("rmdir dir")]),t._v(" "),s("td",[t._v("удалить пустой каталог dir")])]),t._v(" "),s("tr",[s("td",[t._v("touch file1 file2")]),t._v(" "),s("td",[t._v("создать два файла")])]),t._v(" "),s("tr",[s("td",[t._v("cp file1 file2")]),t._v(" "),s("td",[t._v("копировать файл")])]),t._v(" "),s("tr",[s("td",[t._v("pwd")]),t._v(" "),s("td",[t._v("отобразить текущий каталог")])]),t._v(" "),s("tr",[s("td",[t._v("cd /home/user/work")]),t._v(" "),s("td",[t._v("перейти в каталог work пользователя user")])]),t._v(" "),s("tr",[s("td",[t._v('echo "hello" > file1')]),t._v(" "),s("td",[t._v('записать "hello" в файл (сотрёт всё остальное)')])]),t._v(" "),s("tr",[s("td",[t._v('echo "hello" >> file1')]),t._v(" "),s("td",[t._v('дописать "hello" в конец файла')])]),t._v(" "),s("tr",[s("td",[t._v("ctrl-s")]),t._v(" "),s("td",[t._v("приостановить вывод команды")])]),t._v(" "),s("tr",[s("td",[t._v("ctrl-q")]),t._v(" "),s("td",[t._v("возобновить вывод команды")])]),t._v(" "),s("tr",[s("td",[t._v("ctrl-d")]),t._v(" "),s("td",[t._v("выйти из оболочки")])]),t._v(" "),s("tr",[s("td",[t._v("ctrl-c")]),t._v(" "),s("td",[t._v("прервать выполнение")])]),t._v(" "),s("tr",[s("td",[t._v("ls -lt ~/work")]),t._v(" "),s("td",[t._v("сортировать вывод по дате последнего изменения")])]),t._v(" "),s("tr",[s("td",[t._v("ls -lu")]),t._v(" "),s("td",[t._v("по времени последнего использования")])]),t._v(" "),s("tr",[s("td",[t._v("cat hello.c")]),t._v(" "),s("td",[t._v("вывести на экран содержимое файла hello.c")])]),t._v(" "),s("tr",[s("td",[t._v("wc hello.c")]),t._v(" "),s("td",[t._v("подсчитать строки(-l), слова(-w), символы(-m) в файле hello.c")])]),t._v(" "),s("tr",[s("td",[t._v("wc -L hello.c")]),t._v(" "),s("td",[t._v("узнать максимальную длину строки")])]),t._v(" "),s("tr",[s("td",[t._v("df -h")]),t._v(" "),s("td",[t._v("информация о свободном месте на смонтированных устройствах")])]),t._v(" "),s("tr",[s("td",[t._v("du -h")]),t._v(" "),s("td",[t._v("сколько места занимают файлы каталога и подкаталогов")])]),t._v(" "),s("tr",[s("td",[t._v("free -m")]),t._v(" "),s("td",[t._v("использование оперативной памяти (-m мегабайт, -g гигабайт)")])]),t._v(" "),s("tr",[s("td",[t._v("ps -aux")]),t._v(" "),s("td",[t._v("информация о запущенных процессах")])]),t._v(" "),s("tr",[s("td",[t._v("killall PID")]),t._v(" "),s("td",[t._v("снять задачу по её PID (или по имени)")])]),t._v(" "),s("tr",[s("td",[t._v('sleep 1; echo "hello"')]),t._v(" "),s("td",[t._v("вывести 'hello' через секунду")])]),t._v(" "),s("tr",[s("td",[t._v("whereis emacs")]),t._v(" "),s("td",[t._v("найти местоположение emacs")])]),t._v(" "),s("tr",[s("td",[t._v("file file.pdf")]),t._v(" "),s("td",[t._v("вывод информации о типе файла")])])])]),t._v(" "),s("h2",{attrs:{id:"поиск-по-шабnону"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#поиск-по-шабnону","aria-hidden":"true"}},[t._v("#")]),t._v(" "),s("a",{attrs:{id:"search"}}),t._v("Поиск по шаблону")]),t._v(" "),s("p",[s("code",[t._v("Grep")]),t._v(" просматривает файл в поиске строк, соответствующих шаблону. Можно указать\nнесколько файлов сразу.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" Hello hello.c  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# найти слово 'Hello' в файле hello.c")]),t._v("\n  printf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello, world!'),s("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v('"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" Hello hello.c hello.cpp\n  hello.c:    printf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello, world!'),s("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v('"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  hello.cpp:    cout "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello!'),s("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v('"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("При указании ключа "),s("code",[t._v("-v")]),t._v(" ищет строки, "),s("em",[t._v("не соответствующие")]),t._v(" шаблону, "),s("code",[t._v("-n")]),t._v(" выводит\nномера строк:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" -v Hello hello.c\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#include <stdio.h>")]),t._v("\nint "),s("span",{pre:!0,attrs:{class:"token function-name function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Также "),s("code",[t._v("grep")]),t._v(" (и "),s("code",[t._v("egrep")]),t._v(") может работать с "),s("em",[t._v("регулярными выражениями")]),t._v(". К\nсожалению, метасимволы, используемые этими программами, не всегда совпадают.")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("метасимвол")]),t._v(" "),s("th",[t._v("описание")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("^")]),t._v(" "),s("td",[t._v("начало строки")])]),t._v(" "),s("tr",[s("td",[t._v("$")]),t._v(" "),s("td",[t._v("конец строки")])]),t._v(" "),s("tr",[s("td",[t._v(".")]),t._v(" "),s("td",[t._v("одиночный символ")])]),t._v(" "),s("tr",[s("td",[t._v("[...]")]),t._v(" "),s("td",[t._v("любой из символов множества")])]),t._v(" "),s("tr",[s("td",[t._v("r*")]),t._v(" "),s("td",[t._v("0 или больше вхождений r")])]),t._v(" "),s("tr",[s("td",[t._v("r+")]),t._v(" "),s("td",[t._v("1 или больше вхождений r (egrep)")])]),t._v(" "),s("tr",[s("td",[t._v("r?")]),t._v(" "),s("td",[t._v("0 или одно вхождение r (egrep)")])])])]),t._v(" "),s("h2",{attrs:{id:"сортировка-и-замена-строк"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#сортировка-и-замена-строк","aria-hidden":"true"}},[t._v("#")]),t._v(" "),s("a",{attrs:{id:"sort"}}),t._v("Сортировка и замена строк")]),t._v(" "),s("p",[t._v("Команда "),s("code",[t._v("sort")]),t._v(" применяется для сортировки данных по алфавиту: сначала пробелы,\nзатем буквы в верхнем регистре, затем буквы в нижнем регистре.")]),t._v(" "),s("p",[t._v("Вывести последние 10 строк файла может команда "),s("code",[t._v("tail")]),t._v(". Если необходимо изменить\nколичество выводимых строк, нужно сказать "),s("code",[t._v("tail")]),t._v(" об этом. Например, затребуем\nпоследние 12 строк файла "),s("code",[t._v("english-alphabet.cpp")]),t._v(":")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tail")]),t._v(" -12 english-alphabet.cpp\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#include <iostream>")]),t._v("\nusing namespace std"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nint "),s("span",{pre:!0,attrs:{class:"token function-name function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    char letter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    for"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("letter "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'A'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" letter "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Z'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" letter++ "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        cout "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" letter "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('" "')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        cout "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v('"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Во многих случаях имеет смысл применить команду "),s("code",[t._v("sed")]),t._v(", которая построчно читает\nвходной файл и поочерёдно выполняет команды над каждой его строкой.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" -n "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'10,50p'")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# вывести строки с 10 по 50")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1,10d'")]),t._v("         "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# удалить строки с 1 по 10")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$d")]),t._v("'")]),t._v("            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# удалить последнюю строку")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s/UNIX/LINUX/g'")]),t._v(" unix "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" linux\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" unix linux\nUNIX\nLINUX\n")])])]),s("p",[t._v("В последнем примере мы заменили слово "),s("code",[t._v("UNIX")]),t._v(" на слово "),s("code",[t._v("LINUX")]),t._v(" в одноимённом\nфайле. Исходный файл остался неизменённым.")]),t._v(" "),s("p",[t._v("А теперь совместим работу "),s("code",[t._v("sed")]),t._v(" и "),s("code",[t._v("wc")]),t._v(" для выполнения часто встречающейся\nзадачи — "),s("em",[t._v("подсчёта слов без пробелов")]),t._v(":")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s/ //g'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s/.$//;N;s/"),s("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v("/ /g'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("wc")]),t._v(" -m\n")])])]),s("p",[t._v("Здесь "),s("code",[t._v("cat")]),t._v(" принимает на вход пользовательский аргумент (файл), "),s("code",[t._v("sed")]),t._v(" очищает\nфайл от лишних для нашей задачи символов, "),s("code",[t._v("wc")]),t._v(" подсчитывает количество оставшихся символов.")]),t._v(" "),s("p",[t._v("Хорошую службу может сослужить "),s("code",[t._v("awk")]),t._v(". Это язык сканирования и обработки\nшаблонов. На вход принимает аргумент  вида "),s("code",[t._v("шаблон {действие}")]),t._v(" и имена\nфайлов. К примеру, нужно выбрать третье поле из вывода "),s("code",[t._v("df")]),t._v(":")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("df")]),t._v(" -ah /home\nФайловая система Размер Использовано  Дост Использовано% Cмонтировано в\n/dev/sda6          104G          55G   45G           "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("56")]),t._v("% /home\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("df")]),t._v(" -ah /home "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("awk")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'{print "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$3")]),t._v("}'")]),t._v("\nРазмер\n55G\n")])])]),s("h2",{attrs:{id:"сравнение-файnов"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#сравнение-файnов","aria-hidden":"true"}},[t._v("#")]),t._v(" "),s("a",{attrs:{id:"compare"}}),t._v("Сравнение файлов")]),t._v(" "),s("p",[t._v("Иногда мы имеем несколько незначительно отличающихся файлов. Искать различия вручную,\nможет быть, и увлекательно, но не тогда, когда время ограничено. На помощь может\nприйти программа "),s("code",[t._v("diff")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" english-alphabet.cpp reverse-alphabet.cpp\n7c7\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("     for"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("letter "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'A'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" letter "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Z'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" letter++ "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n---\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("     for"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("letter "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Z'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" letter "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'A'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" letter-- "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("В примере "),s("code",[t._v("diff")]),t._v(" отображает имеющиеся различия между двумя файлами и указывает\nразличающиеся строки. В данном примере оба файла имеют лишь одно отличие и\nнаходится оно на седьмой строке.")]),t._v(" "),s("h2",{attrs:{id:"метасимвоnы"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#метасимвоnы","aria-hidden":"true"}},[t._v("#")]),t._v(" "),s("a",{attrs:{id:"metasymbols"}}),t._v("Метасимволы")]),t._v(" "),s("p",[t._v("Весьма удобны в использовании шаблонные символы или метасимволы.")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("символ")]),t._v(" "),s("th",[t._v("описание")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v(">")]),t._v(" "),s("td",[t._v("направить стандартный вывод в файл")])]),t._v(" "),s("tr",[s("td",[t._v(">>")]),t._v(" "),s("td",[t._v("добавить вывод в конец файла")])]),t._v(" "),s("tr",[s("td",[t._v("<")]),t._v(" "),s("td",[t._v("взять стандартный вывод из файла")])]),t._v(" "),s("tr",[s("td",[t._v("*")]),t._v(" "),s("td",[t._v("любая строка символов")])]),t._v(" "),s("tr",[s("td",[t._v("[...]")]),t._v(" "),s("td",[t._v("любой из символов в скобках")])]),t._v(" "),s("tr",[s("td",[t._v("?")]),t._v(" "),s("td",[t._v("любой отдельный символ")])]),t._v(" "),s("tr",[s("td",[t._v(";")]),t._v(" "),s("td",[t._v("разделитель команд")])]),t._v(" "),s("tr",[s("td",[t._v("(...)")]),t._v(" "),s("td",[t._v("выполнить команду в дочерней оболочке")])]),t._v(" "),s("tr",[s("td",[t._v("'...'")]),t._v(" "),s("td",[t._v("выполнить без интерпретации метасимволов")])]),t._v(" "),s("tr",[s("td",[t._v('"..."')]),t._v(" "),s("td",[t._v("интерпретировать метасимволы внутри")])]),t._v(" "),s("tr",[s("td",[t._v("&")]),t._v(" "),s("td",[t._v("выполнение последующей команды, не дожидаясь завершения предыдущей")])]),t._v(" "),s("tr",[s("td",[t._v("&&")]),t._v(" "),s("td",[t._v("выполнение последующей команды только при завершении предыдущей")])])])]),t._v(" "),s("p",[t._v("Чтобы экранировать шаблонный символ возьмите его в одинарные кавычки "),s("code",[t._v("'*'")]),t._v(" или\nиспользуйте знак экранирования "),s("code",[t._v("\\")]),t._v(" (обратная косая черта).")]),t._v(" "),s("h2",{attrs:{id:"конвейеры"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#конвейеры","aria-hidden":"true"}},[t._v("#")]),t._v(" "),s("a",{attrs:{id:"pipeline"}}),t._v("Конвейеры")]),t._v(" "),s("p",[t._v("Здесь следовало бы начать с определения канала как такового, что и мы и\nсделаем. "),s("strong",[t._v("Канал")]),t._v(" (pipe) — способ подключения вывода одной программы на вход\nдругой без использования временных файлов.")]),t._v(" "),s("p",[s("strong",[t._v("Конвейер")]),t._v(" (pipeline) — соединение двух и более программ посредством таких\nканалов.")]),t._v(" "),s("p",[t._v("Символ вертикальной черты "),s("code",[t._v("|")]),t._v(" сообщит оболочке, что нужно задействовать\nконвейер. В конвейер можно включить любое количество программ и все они будут\nвыполняться одновременно (ядро следит за правильностью синхронизации). Создание\nканалов лежит на плечах оболочки.")]),t._v(" "),s("p",[t._v("В случае, когда имена файлов не указаны, команда читает свой стандартный ввод\n(по-умолчанию терминал), перенаправляет ответ на стандартный вывод (который\nтакже связан с терминалом).")]),t._v(" "),s("p",[t._v("Например:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("who")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("wc")]),t._v(" -l "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# подсчитать кол-во пользователей")]),t._v("\n")])])]),s("p",[t._v("Если хочется создать конвейер, который выполнит сразу несколько команд, их надо\nразделить знаком точки с запятой и взять в круглые скобки.")]),t._v(" "),s("h2",{attrs:{id:"процессы"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#процессы","aria-hidden":"true"}},[t._v("#")]),t._v(" "),s("a",{attrs:{id:"daemons"}}),t._v("Процессы")]),t._v(" "),s("p",[t._v("Упоминая UNIX, нельзя не сказать несколько слов об управлении процессами.")]),t._v(" "),s("p",[s("strong",[t._v("Процесс")]),t._v(" — экземпляр выполняющейся программы. Важно различать программы\nи процессы: "),s("code",[t._v("wc")]),t._v(" — это программа; каждый раз, когда она запускается,\nсоздаётс новый процесс.")]),t._v(" "),s("p",[t._v("Как уже неоднократно упоминалось ранее, команды могут быть введены в одну\nстроку, если они разделены между собой знаком точки с запятой.")]),t._v(" "),s("p",[t._v("В случае, когда процесс занимает слишком много ресурсов, следует понизить его\nприоритет перед другими процессами, чему способствует запуск процесса,\nпредваряемый командой "),s("code",[t._v("nice")]),t._v(":")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# nice emerge-webrsync && sudo emerge -auvDN world\n")])])]),s("p",[t._v("Если выполнение программы обещает быть очень долгим, а ждать времени нет, можно\nвоспользоваться услугами программы "),s("code",[t._v("nohup")]),t._v(". Её формат "),s("code",[t._v("nohup command &")]),t._v(". При этом\nесть возможность спокойно выйти из оболочки, не опасаясь того, что выполнение\nпрограммы завершится, а вывод прочесть в специально созданном "),s("code",[t._v("nohup")]),t._v(" файле\n"),s("code",[t._v("nohup.out")]),t._v(". "),s("code",[t._v("Nohup")]),t._v(" использует "),s("code",[t._v("nice")]),t._v(", поэтому указывать приоритет дополнительно нет необходимости.")]),t._v(" "),s("div",{staticClass:"warning"},[s("p",[t._v("\nПри использовании конвейера совместно со знаком амперсанда (&) идентификатор\nпроцесса тлько один, не смотря на то, что в конвейере запущено несколько команд.\n")])]),t._v(" "),s("p",[t._v("Наконец, у вас всегда есть возможность реализовать отложенный запуск\nпрограмм. Для этого нехитрого действа рекомендуется обратиться к таким командам\nкак "),s("code",[t._v("at")]),t._v(" или ранее упомянутый "),s("code",[t._v("sleep")]),t._v(". Первая из них изначально недоступна, требует\nпредварительной установки из репозитория.")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('# emerge -av sys-process/at  # установить at в gentoo\n# atd                        # запуск демона at\n$ at 00:27                   # установить время\n$ at> emerge-webrsync        # дать команду\n$ Ctrl-D                     # выйти\n$ sleep 5; echo "Good bye"   # запуск после пяти секунд\n')])])]),s("h2",{attrs:{id:"настройка-окружения"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#настройка-окружения","aria-hidden":"true"}},[t._v("#")]),t._v(" "),s("a",{attrs:{id:"environment"}}),t._v("Настройка окружения")]),t._v(" "),s("p",[t._v("Если в домашнем каталоге имеется файл "),s("code",[t._v(".bash_profile")]),t._v(", "),s("code",[t._v(".zshenv")]),t._v(" или\nподобный им (зависит от используемой оболочки), при входе в систему будут\nвыполняться прописанные в нём команды. Например:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("DISPLAY")])]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(":0.0\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello, '),s("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$USER")]),t._v("!"),s("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v("Today "),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("date")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v('"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("EDITOR")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/usr/bin/emacs\n")])])]),s("p",[t._v("Последняя запись определяет встроенную переменную "),s("code",[t._v("$EDITOR")]),t._v(", тем самым\nустанавливая в качество текстового редактора по-умолчанию emacs. Для просмотра\nвсех имеющихся переменных введите команду "),s("code",[t._v("set")]),t._v(".")]),t._v(" "),s("p",[t._v("Чтобы изменения вступили в силу «перечитайте» соответствующий файл\n(в нашем случае используется Z Shell):")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" .zshenv\n")])])]),s("p",[t._v("Часто может возникнуть потребность указания "),s("em",[t._v("путей поиска")]),t._v(", которые хранятся в\nпеременной "),s("code",[t._v("PATH")]),t._v(". Чтобы узнать в каких каталогах происходит поиск, нужно вывести\nзначение этой переменной на экран. В случае, если этих значений недостаточно,\nдобавить нужные в "),s("code",[t._v(".zshenv")]),t._v(". Пути разделены двоеточием, точка обозначает\nтекущий каталог и не является обязательной:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$PATH")]),t._v("                           "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# вывести содержимое на экран")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" .zshenv\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("PATH")])]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(".:/bin:/usr/local/bin      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# переопределение всех путей")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("PATH")])]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$PATH")]),t._v(":/home/redvi/.rvm/bin "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# добавление пути к уже существующим")]),t._v("\n")])])]),s("p",[t._v("Также бывает удобно "),s("em",[t._v("создавать свои команды")]),t._v(". Самый простой пример: комбинация уже\nсуществующих команд в одну.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#!/bin/sh"),s("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v("ls "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v(" && cat "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v("'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" lc\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" +x lc\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sh")]),t._v(" lc file.txt\n")])])]),s("p",[t._v("Здесь нужные строки записываются в файл "),s("code",[t._v("lc")]),t._v(", которому даются права на\nисполнение. Впоследующем файл запускается при помощи оболочки. Если поместить\nкаталог, где находится "),s("code",[t._v("lc")]),t._v(" в переменную "),s("code",[t._v("PATH")]),t._v(", можно будет опустить "),s("code",[t._v("sh")]),t._v(".")]),t._v(" "),s("p",[t._v("Если подытожить: команда создаётся в пользовательском каталоге. Например,\n"),s("code",[t._v("/home/user/usr/bin/mycommand")]),t._v(". После чего в файл, который читается оболочкой,\nдобавляется соответствующий путь поиска команд.")]),t._v(" "),s("p",[t._v("Также нужно пояснить значение "),s("em",[t._v("позиционного параметра")]),t._v(" "),s("code",[t._v("$1")]),t._v(". Он служит переменной,\nпередающей первый аргумент при вызове команды "),s("code",[t._v("lc")]),t._v(". В нашем случае на это\nместо ставится имя файла. Само имя программы — это "),s("code",[t._v("$0")]),t._v(".\nЕсли количество аргументов заранее неизвестно, подставляется шаблонное выражение\n"),s("code",[t._v("$*")]),t._v(".")]),t._v(" "),s("p",[t._v("Если переменные, содержащиеся в "),s("code",[t._v(".profile")]),t._v(" должны быть глобальными,\nрекомендуется задать их в "),s("code",[t._v("/etc/profile")]),t._v(".")]),t._v(" "),s("h2",{attrs:{id:"права-доступа-и-файnы"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#права-доступа-и-файnы","aria-hidden":"true"}},[t._v("#")]),t._v(" "),s("a",{attrs:{id:"rwx"}}),t._v("Права доступа и файлы")]),t._v(" "),s("p",[t._v("Запомнить обозначения прав доступа не составит большого труда. По большому счёту\nони сводятся к чтению (read), записи (write) и исполнению (execute).")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" -l sort.py\n-rwxr-xr-x "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" mark "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("users")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("388")]),t._v(" ноя "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("26")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2013")]),t._v(" sort.py*\n")])])]),s("p",[t._v("Из приведённой выше записи можно понять следующее:")]),t._v(" "),s("p",[t._v("это файл, а не каталог (-); владельцу (пользователю mark) он доступен на\nзапись, чтение и исполнение; группе владельца users и всем остальным на чтение и выполнение.")]),t._v(" "),s("p",[t._v("Весьма демократично, не так ли? Для изменения прав используются две команды:\n"),s("code",[t._v("chmod")]),t._v(" и "),s("code",[t._v("chown")]),t._v(", первая из которых меняет права доступа к файлу, вторая —\nменяет владельца и/или группу файла.")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ chmod 644               # изменить права доступа\n# chown root:adm sort.py  # теперь владелец root, группа adm\n")])])]),s("p",[t._v("Как видно из примера, права можно задавать лишь числами. Но разобраться с ними\nничуть не сложнее: их тоже три.")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("4")]),t._v(" read")]),t._v(" "),s("li",[s("strong",[t._v("2")]),t._v(" write")]),t._v(" "),s("li",[s("strong",[t._v("1")]),t._v(" execute")])]),t._v(" "),s("p",[t._v("Так, чтобы назначить права только на чтение и запись (read - 4, write - 2),\nнужно к 4 прибавить 2. В итоге мы получаем заветную шестёрку, которая и\nфигурирует в примере.")]),t._v(" "),s("p",[t._v("Что касается "),s("code",[t._v("chmod")]),t._v(", при необходимости добавить или запретить права доступа,\nможно использовать "),s("code",[t._v("+")]),t._v(" и "),s("code",[t._v("-")]),t._v(" соответственно:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" +x sort.py  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# дать всем права на выполнение")]),t._v("\n")])])]),s("p",[t._v("Помимо этого существует бит SUID, но в данной статье он не рассматривается, ибо\nприменяется достаточно редко и теоретически небезопасен.")]),t._v(" "),s("div",{staticClass:"warning"},[s("p",[t._v("\nесли для записи доступен каталог, пользователи могут удалять из него файлы\nнезависимо от прав доступа к этим файлам\n")])]),t._v(" "),s("p",[t._v("Дабы проиллюстрировать сказанное выше, создадим каталог и поиграем с правами\nдоступа к нему:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" catalog "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" -ld catalog\ndrwxr-xr-x "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" redvi "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("users")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("644")]),t._v(" catalog "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" -ld catalog\ndrw-r--r-- "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" redvi "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("users")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("touch")]),t._v(" catalog/sc.css\ntouch: невозможно выполнить "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("touch")]),t._v(" для «catalog/sc.css»: Отказано в доступе\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("744")]),t._v(" catalog\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("touch")]),t._v(" catalog/sc.css\n")])])]),s("p",[t._v("Также у каждого файла имеется служебная информация (время модификации,\nпоследнего доступа), которая хранится "),s("em",[t._v("в индексном дескрипторе")]),t._v("\n(inode). Интересно, что сам файл скорее представляет собой ссылку —\nуказание на индексный дескриптор: например, при\nудалении командой "),s("code",[t._v("rm")]),t._v(" происходит удаление ссылки, и только если нигде больше не\nосталось других ссылок на файл удаляется сам индексный дескриптор, а значит и\nсам файл. Возможно, это звучит немного запутанно, но я не знаю как объяснить\nлучше.")]),t._v(" "),s("p",[t._v("Создание "),s("em",[t._v("жёсткой ссылки")]),t._v(" на файл возможно при использовании команды "),s("code",[t._v("ln")]),t._v(", просмотр всех\nимеющихся ссылок — "),s("code",[t._v("ls -li")]),t._v(":")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ln")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("link")]),t._v(" link2\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" -li\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5519273")]),t._v(" -rw-r--r-- "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("link")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5519273")]),t._v(" -rw-r--r-- "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" link2\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5256834")]),t._v(" -rwxr-xr-x "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" sort.py*\n")])])]),s("p",[t._v("Так, оба файла имеют один и тот же индексный дескриптор (5519273), и по выводу\nкоманды "),s("code",[t._v("ls")]),t._v(" видно, что у него два счётчика (2). При удалении одного из них,\nиндексный дескриптор (и содержимое файла) никуда не исчезнет.")]),t._v(" "),s("p",[t._v("У читателя может возникнуть вопрос: чем же тогда создание жёсткой ссылки\nотличается от простого копирования файла? Всё просто: при копировании создаются\nдва разных файла, если внести изменения в один, то они никак не повлияют на\nдругой. Жёсткая ссылка обеспечивает полную идентичность содержимого: при\nредактировании первого файла все изменения отражаются и во втором.")]),t._v(" "),s("p",[t._v("С другой стороны мы можем создать "),s("em",[t._v("символическую ссылку")]),t._v(", которая всего лишь указывает на местонахождение\nфайла. Если хотите, можете сравнить это с программой и её ярлыком в OS Windows.")]),t._v(" "),s("p",[t._v("При удалении или перемещении файла, символическая ссыка перестаёт работать, ибо ведёт к несуществующему файлу.")]),t._v(" "),s("h2",{attrs:{id:"откnючение-системного-звукового-сигнаnа"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#откnючение-системного-звукового-сигнаnа","aria-hidden":"true"}},[t._v("#")]),t._v(" "),s("a",{attrs:{id:"beep-disable"}}),t._v("Отключение системного звукового сигнала")]),t._v(" "),s("p",[t._v("Если вы не в силах выносить системный звуковой сигнал в linux, что с вероятностью в 100% возникает\nпри неверном вводе, можно воспользоваться нижеизложенными командами.")]),t._v(" "),s("p",[t._v("Консоль:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'set bell-style none'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" .inputrc\n")])])]),s("p",[t._v("X11:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xset b off'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" .xinitrc\n")])])]),s("p",[t._v("Те, кто пользуется самосборным ядром, могут отключить досадную особенность в\nсамом ядре:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("Device Drivers → Input device support → Miscellaneous devices → PC Speaker support\n")])])]),s("h2",{attrs:{id:"работа-с-архивами"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#работа-с-архивами","aria-hidden":"true"}},[t._v("#")]),t._v(" "),s("a",{attrs:{id:"archive"}}),t._v(" Работа с архивами")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" -zxvf archive.gz         "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# распаковать .gz")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" -cf archive.tar folder/  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# создать tar-архив")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("unzip")]),t._v(" archive.zip            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# распаковать zip-архив")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("zip")]),t._v(" -r archive folder        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# создать zip-архив из каталога folder")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("unrar")]),t._v(" -x                     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# распаковать rar-архив")]),t._v("\n")])])]),s("p",[t._v("Возможно, соответствующие программы для работы с архивами придётся\nпредварительно установить.")]),t._v(" "),s("h2",{attrs:{id:"поnный-backup-и-восстановnение-tar"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#поnный-backup-и-восстановnение-tar","aria-hidden":"true"}},[t._v("#")]),t._v(" "),s("a",{attrs:{id:"full-backup"}}),t._v("Полный backup и восстановление (tar)")]),t._v(" "),s("p",[t._v("Полная копия linux-машины, за исключением каталога "),s("code",[t._v("/backup")]),t._v(" и служебных каталогов\nс сохранением прав доступа. Для создания таковой понадобится LiveCD диск,\nзагрузившись с которого можно приступать к задаче.")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# tar -cvpf /backup/mybackup.tar --directory=/ --exclude=proc --exclude=dev/pts --exclude=backup --exclude=dev\n")])])]),s("p",[t._v("Копия системы будет создана под именем "),s("code",[t._v("backup/mybackup.tar")]),t._v(". Для сжатия (и\nэкономия места на носителе-приёмнике) к указанной команде можно добавить ключ\n"),s("code",[t._v("-z")]),t._v(".")]),t._v(" "),s("p",[t._v("Восстановление копии на ту же машину (в случае использования другой машины\nследует поправить соответствующие строки в "),s("code",[t._v("/etc/fstab")]),t._v(" и установить загрузчик):")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# tar -xvpf /mybackup.tar\n")])])]),s("p",[t._v("В случае восстановления сжатого архива также добавляется ключ "),s("code",[t._v("-z")]),t._v(".")]),t._v(" "),s("h2",{attrs:{id:"инкременаnьный-backup-rsync"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#инкременаnьный-backup-rsync","aria-hidden":"true"}},[t._v("#")]),t._v(" "),s("a",{attrs:{id:"incremental-backup"}}),t._v("Инкременальный backup (rsync)")]),t._v(" "),s("p",[t._v("Идеально подходит для периодического создания копии домашнего каталога.")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# rsync -PavHx --delete-after /home/* /mnt/backup/\n")])])]),s("h2",{attrs:{id:"скачивание-файnов-сайтов-по-сети"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#скачивание-файnов-сайтов-по-сети","aria-hidden":"true"}},[t._v("#")]),t._v(" "),s("a",{attrs:{id:"download"}}),t._v("Скачивание файлов/сайтов по сети")]),t._v(" "),s("p",[t._v("Делается это при помощи программы "),s("code",[t._v("wget")]),t._v(", где ключ "),s("code",[t._v("-c")]),t._v(" позволит докачать файл при\nобрыве соединения, а ключ "),s("code",[t._v("-r")]),t._v(" используется в случае, если необходимо\nрекурсивное скачивание:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" -c http://distfiles.gentoo.org/*/install-amd64-minimal-*.iso\n")])])]),s("h2",{attrs:{id:"создание-загрузочного-usb-flash"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#создание-загрузочного-usb-flash","aria-hidden":"true"}},[t._v("#")]),t._v(" "),s("a",{attrs:{id:"usb"}}),t._v("Создание загрузочного usb-flash")]),t._v(" "),s("p",[t._v("Предполагается, что лучший способ для этого — использование "),s("code",[t._v("dd")]),t._v(". Если есть\nнеобходимость разметить usb-flash, запустите команду "),s("code",[t._v("fdisk")]),t._v(", вот её флаги:")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("ключ")]),t._v(" "),s("th",[t._v("описание")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("a")]),t._v(" "),s("td",[t._v("установить/снять флаг загрузочного раздела")])]),t._v(" "),s("tr",[s("td",[t._v("c")]),t._v(" "),s("td",[t._v("переключить флаг совместности с dos")])]),t._v(" "),s("tr",[s("td",[t._v("d")]),t._v(" "),s("td",[t._v("удалить раздел")])]),t._v(" "),s("tr",[s("td",[t._v("l")]),t._v(" "),s("td",[t._v("вывести список известных типов разделов")])]),t._v(" "),s("tr",[s("td",[t._v("m")]),t._v(" "),s("td",[t._v("показать меню")])]),t._v(" "),s("tr",[s("td",[t._v("n")]),t._v(" "),s("td",[t._v("добавить новый раздел")])]),t._v(" "),s("tr",[s("td",[t._v("o")]),t._v(" "),s("td",[t._v("создать новую пустую таблицу разделов в стиле DOS")])]),t._v(" "),s("tr",[s("td",[t._v("p")]),t._v(" "),s("td",[t._v("показать существующею таблицу разделов")])]),t._v(" "),s("tr",[s("td",[t._v("q")]),t._v(" "),s("td",[t._v("выйти без сохранения изменений")])]),t._v(" "),s("tr",[s("td",[t._v("t")]),t._v(" "),s("td",[t._v("изменить метку типа раздела")])]),t._v(" "),s("tr",[s("td",[t._v("v")]),t._v(" "),s("td",[t._v("проверить таблицу разделов")])]),t._v(" "),s("tr",[s("td",[t._v("w")]),t._v(" "),s("td",[t._v("сохранить изменения и выйти")])]),t._v(" "),s("tr",[s("td",[t._v("x")]),t._v(" "),s("td",[t._v("дополнительные возможности (только для экспертов)")])])])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# fdisk -l\nУстр-во   Загрузочный     Start Конец    Blocks  Id System\n/dev/sda1*            1xxx 4xxx 10xxx+ 83 Linux\n/dev/sda2             1xxx 1xxx 5xxx  82 Linux swap / Solaris\n/dev/sda5             4xxx 6xxx 11xxx+ 83 Linux\n\nУстр-во   Start   Конец   Size Тип\n/dev/sdb1  2048     15644671   7,5G Microsoft basic data\n\n# fdisk /dev/dsb\n# dd if=/home/user/ISO/linux.iso of=/dev/sdb\n")])])]),s("h2",{attrs:{id:"кто-в-системе"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#кто-в-системе","aria-hidden":"true"}},[t._v("#")]),t._v(" "),s("a",{attrs:{id:"who"}}),t._v("Кто в системе")]),t._v(" "),s("p",[t._v("Кто сейчас находится в системе, когда и кем был выполнен последний вход и\nпрочее. Для получения более подробных сведений используйте ключ "),s("code",[t._v("-a")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("who")]),t._v("\nredvi ~  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("who")]),t._v("\nroot     tty3         "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2014")]),t._v("-07-30 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(":43\nredvi    :0.0         "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2014")]),t._v("-07-30 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(":22\n")])])]),s("h2",{attrs:{id:"установка-даты-и-времени"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#установка-даты-и-времени","aria-hidden":"true"}},[t._v("#")]),t._v(" "),s("a",{attrs:{id:"date-and-time"}}),t._v("Установка даты и времени")]),t._v(" "),s("p",[t._v("Первая из приведённых ниже программ отобразит текущие дату и время. Вторая\nустановит нужные параметры (формат MMDDhhmmCCYY/месяц-день-часы-минуты-год)")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ date\n# date 073021502014\n")])])])])},[],!1,null,null,null);a.default=n.exports}}]);